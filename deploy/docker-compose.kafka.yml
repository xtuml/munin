version: "3.9"
volumes:
  ConanCache:
    name: ConanCache
    external: true

services:
  aer_proc:
    image: levistarrett/masl-dev:${MASL_VERSION:-latest}
    deploy:
      replicas: 1
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - type: volume
        source: ConanCache
        target: /conan-cache
      - "../models/PV_PROC/build:/work/build"
      - "../models/PV_PROC/schedule:/root/schedule"
      - "./config:/root/config"
      - "./reception-processed:/root/processed"
    ulimits:
      sigpending: -1
    logging:
      driver: local
    working_dir: /root
    command: bash -c "source /work/build/Release/generators/conanrun.sh && export LD_LIBRARY_PATH=$${LD_LIBRARY_PATH}:/work/build/Release/lib && /work/build/Release/bin/AER_PROC_transient -configFile ${CONFIG_FILE:-pv-config.json} -util Kafka -kafka-broker-list kafka:9093 -kafka-group-id reception_group_1 -util MetaData"

  istore_proc:
    image: levistarrett/masl-dev:${MASL_VERSION:-latest}
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - type: volume
        source: ConanCache
        target: /conan-cache
      - "../models/PV_PROC/build:/work/build"
      - "../models/PV_PROC/schedule:/root/schedule"
      - "./config:/root/config"
      - "./InvariantStore:/root/InvariantStore"
    ulimits:
      sigpending: -1
    logging:
      driver: local
    working_dir: /root
    command: bash -c "source /work/build/Release/generators/conanrun.sh && export LD_LIBRARY_PATH=$${LD_LIBRARY_PATH}:/work/build/Release/lib && /work/build/Release/bin/ISTORE_PROC_sqlite -db ./InvariantStore/InvariantStore.db -util Kafka -kafka-broker-list kafka:9093 -util MetaData"

  aeo_svdc_proc_1:
    image: levistarrett/masl-dev:${MASL_VERSION:-latest}
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - type: volume
        source: ConanCache
        target: /conan-cache
      - "../models/PV_PROC/build:/work/build"
      - "../models/PV_PROC/schedule:/root/schedule"
      - "./config:/root/config"
      - "./InvariantStore:/root/InvariantStore"
      - "./JobIdStore:/root/JobIdStore"
    ulimits:
      sigpending: -1
    logging:
      driver: local
    working_dir: /root
    command: bash -c "source /work/build/Release/generators/conanrun.sh && export LD_LIBRARY_PATH=$${LD_LIBRARY_PATH}:/work/build/Release/lib && /work/build/Release/bin/AEO_SVDC_PROC_transient -configFile ${CONFIG_FILE:-pv-config.json} -startJobGroup 00 -endJobGroup 3F -util Kafka -kafka-broker-list kafka:9093 -util MetaData"

  aeo_svdc_proc_2:
    image: levistarrett/masl-dev:${MASL_VERSION:-latest}
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - type: volume
        source: ConanCache
        target: /conan-cache
      - "../models/PV_PROC/build:/work/build"
      - "../models/PV_PROC/schedule:/root/schedule"
      - "./config:/root/config"
      - "./InvariantStore:/root/InvariantStore"
      - "./JobIdStore:/root/JobIdStore"
    ulimits:
      sigpending: -1
    logging:
      driver: local
    working_dir: /root
    command: bash -c "source /work/build/Release/generators/conanrun.sh && export LD_LIBRARY_PATH=$${LD_LIBRARY_PATH}:/work/build/Release/lib && /work/build/Release/bin/AEO_SVDC_PROC_transient -configFile ${CONFIG_FILE:-pv-config.json} -startJobGroup 40 -endJobGroup 7F -util Kafka -kafka-broker-list kafka:9093 -util MetaData"

  aeo_svdc_proc_3:
    image: levistarrett/masl-dev:${MASL_VERSION:-latest}
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - type: volume
        source: ConanCache
        target: /conan-cache
      - "../models/PV_PROC/build:/work/build"
      - "../models/PV_PROC/schedule:/root/schedule"
      - "./config:/root/config"
      - "./InvariantStore:/root/InvariantStore"
      - "./JobIdStore:/root/JobIdStore"
    ulimits:
      sigpending: -1
    logging:
      driver: local
    working_dir: /root
    command: bash -c "source /work/build/Release/generators/conanrun.sh && export LD_LIBRARY_PATH=$${LD_LIBRARY_PATH}:/work/build/Release/lib && /work/build/Release/bin/AEO_SVDC_PROC_transient -configFile ${CONFIG_FILE:-pv-config.json} -startJobGroup 80 -endJobGroup BF -util Kafka -kafka-broker-list kafka:9093 -util MetaData"

  aeo_svdc_proc_4:
    image: levistarrett/masl-dev:${MASL_VERSION:-latest}
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - type: volume
        source: ConanCache
        target: /conan-cache
      - "../models/PV_PROC/build:/work/build"
      - "../models/PV_PROC/schedule:/root/schedule"
      - "./config:/root/config"
      - "./InvariantStore:/root/InvariantStore"
      - "./JobIdStore:/root/JobIdStore"
    ulimits:
      sigpending: -1
    logging:
      driver: local
    working_dir: /root
    command: bash -c "source /work/build/Release/generators/conanrun.sh && export LD_LIBRARY_PATH=$${LD_LIBRARY_PATH}:/work/build/Release/lib && /work/build/Release/bin/AEO_SVDC_PROC_transient -configFile ${CONFIG_FILE:-pv-config.json} -startJobGroup C0 -endJobGroup FF -util Kafka -kafka-broker-list kafka:9093 -util MetaData"

  async_logger:
    image: levistarrett/masl-dev:${MASL_VERSION:-latest}
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - type: volume
        source: ConanCache
        target: /conan-cache
      - "../models/PV_PROC/build:/work/build"
      - "./config:/root/config"
      - "./logs/verifier:/var/log/verifier"
      - "./logs/reception:/var/log/reception"
    ulimits:
      sigpending: -1
    logging:
      driver: local
    working_dir: /root
    command: bash -c "source /work/build/Release/generators/conanrun.sh && export LD_LIBRARY_PATH=$${LD_LIBRARY_PATH}:/work/build/Release/lib && /work/build/Release/bin/LOGGER_PROC_transient -log-config config/log-config-pv-proc.properties -util Kafka -kafka-broker-list kafka:9093 -util MetaData"

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"
    healthcheck:
      test: /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9093 --topic default.AEOrdering_service2,default.AEReception_service2,default.AESequenceDC_service31,default.IStore_service2,default.IStore_service3,default.IStore_service4 --describe
      interval: 10s
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_RETENTION_MS: 300000                  # default retention of 5 minutes
      KAFKA_LOG_SEGMENT_BYTES: 1048576                # roll the log at 1MB
      # KAFKA_LOG_ROLL_MS: 60000                      # roll the log every minute
      KAFKA_LOG_SEGMENT_DELETE_DELAY_MS: 1            # delete immediately after log roll
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 10000    # check the retention condition every 10 seconds
      KAFKA_CREATE_TOPICS: "default.AEReception_service2:1:1,default.AEOrdering_service2:1:1,default.AESequenceDC_service31:1:1,default.IStore_service2:1:1,default.IStore_service3:1:1,default.IStore_service4:1:1,default.BenchmarkingProbe_service0:1:1,default.AsyncLogger_service0:1:1,default.AsyncLogger_service1:1:1,default.AsyncLogger_service2:1:1,default.AsyncLogger_service3:1:1,default.AsyncLogger_service4:1:1,default.AsyncLogger_service5:1:1,default.AsyncLogger_service6:1:1,default.AsyncLogger_service7:1:1,default.AsyncLogger_service8:1:1,default.AsyncLogger_service9:1:1,default.AsyncLogger_service10:1:1,default.AsyncLogger_service11:1:1,default.AsyncLogger_service12:1:1,default.AsyncLogger_service13:1:1,default.AsyncLogger_service14:1:1,default.AsyncLogger_service15:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka_config:
    image: wurstmeister/kafka
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - "./config:/root/config"
    command: /root/config/configure-kafka.sh
