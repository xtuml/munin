version: "3.9"
volumes:
  ConanCache:
    name: ConanCache
    external: true

services:
  zookeeper:
    image: levistarrett/zookeeper:3.4.6
    ports:
      - "2181:2181"

  kafka:
    image: levistarrett/kafka:latest-arm64
    ports:
      - "9092:9092"
    expose:
      - "9093"
    healthcheck:
      test: /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9093 --topic Protocol_Verifier_Reception,AEOrdering_service0,IStore_service0 --describe
      interval: 10s
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_RETENTION_MS: 300000                  # default retention of 5 minutes
      KAFKA_LOG_SEGMENT_BYTES: 1048576                # roll the log at 1MB
      # KAFKA_LOG_ROLL_MS: 60000                      # roll the log every minute
      KAFKA_LOG_SEGMENT_DELETE_DELAY_MS: 1            # delete immediately after log roll
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 10000    # check the retention condition every 10 seconds
      KAFKA_CREATE_TOPICS: "Protocol_Verifier_Reception:1:1,Protocol_Verifier_InfoWarn:1:1,Protocol_Verifier_Statistics:1:1,Protocol_Verifier_VGateway:1:1,BenchmarkingProbe_service0:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka_config:
    image: levistarrett/kafka:latest-arm64
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - "./config:/root/config"
    command: /root/config/configure-kafka.sh
