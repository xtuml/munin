//! ACTIVITY BEGIN. '082ae146-03c4-46f9-ad89-d7de41b1ff36' DO NOT EDIT THIS LINE.
private service AEOrdering::init () is
configFilePath : string;
configFile : string;
logMessage : string;
systemSpec : instance of SystemSpec;
startJobGroup : integer;
endJobGroup : integer;

begin

	startJobGroup := integer'parse(CommandLine::get_option_value("-startJobGroup", "00"),16);
	endJobGroup := integer'parse(CommandLine::get_option_value("-endJobGroup", "FF"),16);
	// get the supplied command line option for the config file and verify it is valid
	configFilePath := CommandLine::get_option_value("-configPath", "config/");
	configFile := CommandLine::get_option_value("-configFile", "config.json");
	if Filesystem::file_exists(Filesystem::filename(configFilePath & configFile)) then 
		systemSpec := find_one SystemSpec();
		if systemSpec = null then
			systemSpec := create unique SystemSpec(configFilePath => configFilePath, configFile => configFile, specUpdateRate => @PT2M@, maxOutOfSequenceEvents => 10, 
				                                   maximumJobTime => @PT10M@, jobCompletePeriod => @PT10M@, fileControlWaitTime => @PT1S@, 
				                                   defaultJobExpiryDuration => duration'weeks(52), defaultStaleAuditEventDuration => duration'hours(24),
				                                   defaultBlockedAuditEventDuration => duration'hours(24), 
				                                   startJobGroup => startJobGroup, endJobGroup => endJobGroup, Current_State => Created);
		end if;
		systemSpec.loadConfigFile();
    	generate SystemSpec.checkConfigUpdate() to systemSpec;
	else
		logMessage := "AEOrdering::init : failed to locate config file. Specified file = " & configFilePath & configFile;
		Logger::log(Logger::Error, "AEOrdering", logMessage);
		raise program_error;
	end if;

exception
	when others =>
	
		logMessage := "AEOrdering::init : failed during start up";
		Logger::log(Logger::Error, "AEOrdering", logMessage);
		raise program_error;
	
end service;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

//! ACTIVITY BEGIN. 'ffcee2b3-5671-490c-8731-d0a4a122cdab' DO NOT EDIT THIS LINE.
private service AEOrdering::registerCommandLineArgs () is
begin

	// The domain needs to be started with the command line argument -config that specifies where to find the configuration file;
  begin
	  CommandLine::register_value("-configPath", "The path to the configuration file for the service", CommandLine::Optional, "configPath", CommandLine::Required, CommandLine::Single);
  exception
    when program_error => null;  // Ignore error if option has been defined in another domain.
  end;
  begin
	  CommandLine::register_value("-configFile", "The configuration file for the service", CommandLine::Optional, "configFile", CommandLine::Required, CommandLine::Single);
  exception
    when program_error => null;  // Ignore error if option has been defined in another domain.
  end;
  begin
	  CommandLine::register_value("-startJobGroup", "The starting group id for jobs to be processed by this instance", CommandLine::Optional, "startJobGroup", CommandLine::Required, CommandLine::Single);
  exception
    when program_error => null;  // Ignore error if option has been defined in another domain.
  end;
  begin
	  CommandLine::register_value("-endJobGroup", "The ending group id for jobs to be processed by this instance", CommandLine::Optional, "endJobGroup", CommandLine::Required, CommandLine::Single);
  exception
    when program_error => null;  // Ignore error if option has been defined in another domain.
  end;

end service;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

