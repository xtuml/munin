//! ACTIVITY BEGIN. '5b355e81-b15f-44af-87ca-70f6ec5ca38a' DO NOT EDIT THIS LINE.
public service AEOrdering::AuditEventType.validEvent ( auditEvent : in instance of AuditEvent,
                                                      failureReason : out string ) return boolean is
logMessage : string;
eventType : instance of AuditEventType;
validEvent : boolean := true;
job : instance of Job;
theAuditEventData : AuditEventDataType;
dataValue : integer;

begin

	eventType := find_one AuditEventType(eventType = auditEvent.reportedEventType);
	job := auditEvent -> R9.Job;
	
	// failed to identify the event
	if eventType = null then
		validEvent := false;
		failureReason := "JobId = " & job.jobId & " : EventType = " & auditEvent.reportedEventType & " : FailureReason = Event type is not allowed.";
	else
		// check if the event has dynamic controls that the value is valid. Only integer values are allowed and they have to be greater than 0
		theAuditEventData := auditEvent.auditEventData;
		for dynamicControl in (find AuditEventType(eventType = auditEvent.reportedEventType)) -> R19.DynamicControl loop
			if theAuditEventData.dataItems'contains(dynamicControl.dynamicControlName) = true then
				dataValue := integer'parse(theAuditEventData.dataItems[dynamicControl.dynamicControlName]);
				if dataValue < 1 then
					failureReason := "JobId = " & job.jobId & " :  JobType = " & (eventType -> R12.JobType).jobTypeName &
					                 " : EventType = " & auditEvent.reportedEventType & " : FailureReason = Event type has invalid dynamic control";
					validEvent := false;
				end if;
			end if;
		end loop;
		if validEvent = true then
			link eventType R7 auditEvent;
		end if;
	end if;
	return validEvent;
exception
	when others =>
		failureReason := "JobId = " & job.jobId & " :  JobType = " & (eventType -> R12.JobType).jobTypeName & 
		                 " : EventType = " & auditEvent.reportedEventType & " : FailureReason = Event type has invalid dynamic control";
		return false;
end service;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

