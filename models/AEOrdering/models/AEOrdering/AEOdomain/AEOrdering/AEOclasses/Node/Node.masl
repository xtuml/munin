//! ACTIVITY BEGIN. '1e8e5203-0f08-4b74-ba2f-267194ecb358' DO NOT EDIT THIS LINE.
public service AEOrdering::Node.validEvent ( auditEvent : in instance of AuditEvent,
                                            failureReason : out string ) return boolean is
logMessage : string;
node : instance of Node;
nodeApplications : sequence of instance of Application;
application : instance of Application;
applicationEventTypes : sequence of instance of AuditEventType;
eventType : instance of AuditEventType;
validEvent : boolean := true;

begin
	logMessage := "AEOrdering::Node.validEvent";
	Logger::log(Logger::Information, "AEOrdering", logMessage);

	node := find_one Node(nodeName = auditEvent.reportedNodeName);
	nodeApplications := node -> R5.Application;
	application := find_one nodeApplications(applicationName = auditEvent.reportedApplication);
	applicationEventTypes := application -> R6.AuditEventType;
	eventType := find_one applicationEventTypes(eventType = auditEvent.reportedEventType);
	
	// failed to identify the event
	if node = null then
		validEvent := false;
		failureReason := "Node type is not allowed to be reported for node, nodeName = " & auditEvent.reportedNodeName & ", eventType = " & auditEvent.reportedEventType;
	elsif application = null then
		validEvent := false;
		failureReason := "Application is not allowed to be reported for node, nodeName = " & auditEvent.reportedNodeName & ", applicationName = " & auditEvent.reportedApplication;
	elsif eventType = null then
		validEvent := false;
		failureReason := "Event type is not allowed to be reported for node and application , nodeName = " & auditEvent.reportedNodeName & ", applicationName = " & auditEvent.reportedApplication &
		                 ", eventType = " & auditEvent.reportedEventType;
	else
		link eventType R7 auditEvent;
	end if;
	return validEvent;
end service;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

