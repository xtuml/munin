//! ACTIVITY BEGIN. 'ca101a6d-c040-467e-9a70-f98567db9b00' DO NOT EDIT THIS LINE.
private service IStore::init () is
invStoreName : Filesystem::filename := "./InvariantStore/InvariantStore";
logMessage : string;
invStore : instance of InvStore;

begin

	// get the supplied command line option for the config file and verify it is valid
	invStore := find_one InvStore();
	if invStore = null then
		invStore := create unique InvStore(invStoreName => invStoreName, loadRate => @PT2M@, Current_State => Created);
		// check the invariant store exists and if it does not then create it
		begin
			if Filesystem::file_exists(invStore.invStoreName) = false then
				Filesystem::touch_file(invStore.invStoreName);
			end if;
		exception 
			when others => null;
		end;
	end if;
	generate InvStore.loadStore() to invStore;
	
exception
	when others =>
	
		logMessage := "IStore::init : failed during start up";
		Logger::log(Logger::Error, "IStore", logMessage);
		raise program_error;
	
end service;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

