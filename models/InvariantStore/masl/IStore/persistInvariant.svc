public service IStore::persistInvariant ( invariantName: in string,
                                          invariantValue: in string,
                                          validFrom: in timestamp,
                                          validTo: in timestamp,
                                          sourceJobDefinitionType: in string,
                                          sourceAuditEventType: in string,
                                          sourceAuditEventOccurrenceId: in integer ) is
invariant : instance of Invariant;
invStore : instance of InvStore;

begin
	invariant := find_one Invariant(invariantName = invariantName and invariantValue = invariantValue);
	if invariant = null then
		invariant := create Invariant(invariantName => invariantName, invariantValue => invariantValue, validFrom => validFrom, validTo => validTo, 
			                          sourceJobDefinitionType => sourceJobDefinitionType, sourceAuditEventType => sourceAuditEventType, 
			                          sourceAuditEventOccurrenceId => sourceAuditEventOccurrenceId'image, reportedToLocalClient => true, stored => false);
		invStore := find_one InvStore();
		generate InvStore.loadStore() to invStore;
	end if;
end service;
