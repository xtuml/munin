// BP 7.1.6 content: InstanceStateMachine syschar: 3 persistence-version: 7.1.6

within SequenceVerificationDataCentric::SVDCdomain::AESequenceDC::SVDCclasses::JobDefinition is

	@state_num(1);
	state Active;

	@state_num(2);
	state Deprecated;

	@state_num(3);
	state Suspended;

	@state_num(4);
	state Deleted;

	@event_num(1);
	event suspend;

	@event_num(2);
	event reactivate;

	@event_num(3);
	event deprecate;

	@event_num(4);
	event noJobsUsingDeprecatedJobDefinition;

	@event_num(5);
	event itsTimeToCheckForRemainingJobs;

	state machine is

		|                                    | suspend                            | reactivate                         | deprecate                          | noJobsUsingDeprecatedJobDefinition | itsTimeToCheckForRemainingJobs     |
		| ---------------------------------- | ---------------------------------- | ---------------------------------- | ---------------------------------- | ---------------------------------- | ---------------------------------- |
		| Active                             | Suspended                          | cannot_happen                      | Deprecated                         | cannot_happen                      | cannot_happen                      |
		| Deprecated                         | cannot_happen                      | cannot_happen                      | ignore                             | Deleted                            | Deprecated                         |
		| Suspended                          | cannot_happen                      | Active                             | Deprecated                         | cannot_happen                      | cannot_happen                      |
		| Deleted                            | cannot_happen                      | cannot_happen                      | cannot_happen                      | cannot_happen                      | cannot_happen                      |

	end state machine;

	state Active is
		@noparse
		begin
		  //
		  this.isSuspended := false;
		end state;
		@endnoparse
	end state;

	state Deprecated is
		@noparse
		theSystemSpec : instance of SystemSpecification;
		logMessage : string;
		
		begin
		  this.isDeprecated := true;
		  // Log info: Report that the JobDefinition has been deprecated.
		  logMessage := "JobDefinition has been deprecated - jobName = " & this.jobName;
		  Logger::log(Logger::Information, "AESequenceDC", logMessage); 
		  
		  // Check to see if there are any Jobs in progress that are dependent upon this JobDefinition.
		  if (this -> R8)'length = 0 then
		    // There are no Jobs using this deprecated JobDefinition, so it can safely be deleted.
		    generate JobDefinition.noJobsUsingDeprecatedJobDefinition () to this;
		  else
		    // There are Jobs in progress that are still using this JobDefinition - wait and check again later.
		    theSystemSpec := find_one SystemSpecification();
		    schedule this.jobDefDeletionTimer generate JobDefinition.itsTimeToCheckForRemainingJobs() to this delay theSystemSpec.checkJobDefReadyForDeletionPeriod;
		  end;
		end state;
		@endnoparse
	end state;

	state Suspended is
		@noparse
		begin
		  this.isSuspended := true;
		end state;
		@endnoparse
	end state;

	state Deleted is
		@noparse
		theJobName : string;
		logMessage : string;
		begin
		  // TODO: The deleteJobDefinition function also deletes all related Jobs (if any) - this needs to be removed
		  // from that function because Jobs will auto delete after a period (and the JobDefinition will not be deleted
		  // after deprecation until all remaining Jobs of this type have gone.
		  
		  //Delete this JobDefinition
		  theJobName := this.jobName;
		  this.deleteJobDefinition(this.jobName);
		  
		  // Log info: Report that the deprecated JobDefinition has been deleted.
		  logMessage := "Deprecated JobDefinition has been deleted - jobName = " & theJobName;
		  Logger::log(Logger::Information, "AESequenceDC", logMessage); 
		end state;
		@endnoparse
	end state;

end;
