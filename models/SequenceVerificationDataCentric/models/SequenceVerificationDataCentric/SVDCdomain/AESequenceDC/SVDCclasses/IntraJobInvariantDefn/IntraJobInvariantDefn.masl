//! ACTIVITY BEGIN. '333fda67-43e7-421f-bfb2-da74ee7e4fd1' DO NOT EDIT THIS LINE.
public service AESequenceDC::IntraJobInvariantDefn.createIntraJobInvariantDefn ( jobName : in string,
                                                                                invariantName : in string,
                                                                                invariantEventDefns : in sequence of eventStructure ) is
newInvariant : instance of IntraJobInvariantDefn;
theJobDefn : instance of JobDefinition;
theEventDefn : instance of AuditEventDefinition;
theSequenceDefn: instance of AESequenceDefinition;
theEventInSeqDefn : instance of AEInSequenceDefinition;
theEventOccurrencesInSeqDefn : set of instance of AEOccurrenceInSequenceDefinition;
theEventOccInSeqDefn : instance of AEOccurrenceInSequenceDefinition;
logMessage: string;
eventContent : string;

begin
  theJobDefn := find_one JobDefinition (jobName = jobName);
  if theJobDefn /= null then
    newInvariant := create IntraJobInvariantDefn (jobName => theJobDefn.jobName, intraJobInvName => invariantName);
    link newInvariant R22 theJobDefn;
    
    for eachInvariantEventDefn in invariantEventDefns'elements loop
      theEventDefn := find_one AuditEventDefinition (AEType = eachInvariantEventDefn.eventTypeName);
      if theEventDefn /= null then
        theSequenceDefn := theEventDefn -> R1.AESequenceDefinition;
        theEventInSeqDefn :=  theEventDefn with theSequenceDefn -> R1.AEInSequenceDefinition;
        theEventOccurrencesInSeqDefn := theEventInSeqDefn -> R12;
        theEventOccInSeqDefn := find_one theEventOccurrencesInSeqDefn (occurrenceNumberInSequence = eachInvariantEventDefn.occurrenceId);
        link newInvariant R19 theEventOccInSeqDefn;
      end if;
    end loop;
  else
    // Digital Twin Error dues to failed configurations
    logMessage := "AESequenceDC::IntraJobInvariantDefn.createIntraJobInvariantDefn : Invalid Job Definition for this intra-job invariant definition = " & theJobDefn.jobName;
    Logger::log(Logger::Error, "AESequenceDC", logMessage);
	eventContent := "FailureReason = Invalid Job Definition for this intra-job invariant definition" & " : JobName = " & theJobDefn.jobName;
	Reporting~>reportEvent(Logger::Error, "svdc_job_definition_failed", eventContent);
  end if;
  
end service;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

