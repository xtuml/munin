// BP 7.1.6 content: Package syschar: 3 persistence-version: 7.1.6

within SequenceVerificationDataCentric::SVDCdomain::AESequenceDC is

  package functions is
    @dialect("masl");
    @function_num(2);
    function acceptOrderedEvent(ae_time: in string, app: in string, ae_type: in string, jobId: in string, prevAEIds: in sequence of string, id: in string, auditEventData: in sequence of auditEventDataStructure);

    @dialect("masl");
    @function_num(10);
    function createSVDCsystemSpec(maxIntraSequenceEventTimeoutPeriod: in duration, waitPeriodForAllJobsCompletedCheck: in duration, waitPeriodForJobDeletion: in duration, waitPeriodForInvariantDeletion: in duration, timeoutPeriodForRetreivingStoredInvariants: in duration);

    @dialect("masl");
    @function_num(8);
    function deleteJob(jobId: in string);

    //! This service allows a Job Definition to be deprecated. In early versions this will simple result in deletion of the Job Defintion and its
    //! associated Sequence Definitions, Audit Events Definitions, etc. In due course this can be refuiend to check that there are no Jobs of that
    //! Job Definition currently in progress. If there are then these jobs should be allowed to complete. The Job Definition is then only removed
    //! when there are no in progress Jobs.
    @dialect("masl");
    @function_num(9);
    function deprecateJobDefinition(jobName: in string);

    @dialect("masl");
    @function_num(14);
    function dynamicControlDefinition(jobName: in string, dynamicControlName: in string, dynamicControlType: in dynamicControlTypeEnum, sourceEventType: in string, sourceOccurrenceId: in integer, userEventType: in string, userOccurrenceId: in integer);

    //! This service defines the specification instance for an Audit Event Definition.
    //! Each one of these refers to its previous Audit Event Definition to define the sequence.
    //! The first one in the sequence has no previous audit event definition and has the boolean isSequenceStartEvent set to true.
    //! The last one in the sequence does have a previous audit event definition and has the boolean isSequenceEndEvent set to true.
    //! Forks in the sequence are supported by multiple Audit Event Definitions having the same previous Audit Event Definition.
    //! Merges in the sequence could be supported by allowing multiple values in Previous Audit Event Definition
    @dialect("masl");
    @function_num(7);
    function eventDefinition(jobName: in string, sequenceName: in string, eventType: in string, occurrenceId: in integer, previousEventTypes: in sequence of eventStructure, isSequenceStart: in boolean, isSequenceEnd: in boolean, isBreak: in boolean);

    //! This function, invoked during initialisation after all of the eventDefinition functions have been called, adds an
    //! extra job invariant definition(such as entropy). The parameters define the extra job invariant, the job defintion and event
    //! definition that is the source of the and the invariant and also the full set of job definitions and event definitions
    //! that use the invariant.
    @dialect("masl");
    @function_num(13);
    function extraJobInvariantDefinition(auditEventDataName: in string, sourceJobDefnName: in string, sourceEventType: in string, sourceOccurrenceId: in integer, userEvents: in sequence of userEventDataStructure);

    @dialect("masl");
    @function_num(3);
    function failedJob(jobId: in string, failureReason: in string);

    //! This function, invoked during initialisation after all of the eventDefinition functions have been called, adds an
    //! intra job invariant definition. The parameters define the intra job invariant, the job defintion that the invariant is used in
    //! and the full set of event definitions within that job definition that use the invariant.
    @dialect("masl");
    @function_num(13);
    function intraJobInvariantDefinition(jobDefnName: in string, auditEventDataName: in string, associatedEvents: in sequence of intraJobInvDataStructure);

    @dialect("masl");
    @function_num(4);
    function jobComplete(jobId: in string);

    @dialect("masl");
    @function_num(12);
    function reactivateJobDefinition(jobName: in string);

    @dialect("masl");
    @function_num(15);
    function restoreInvariants(restoredInvariants: in sequence of persistedInvariantStructure);

    @dialect("masl");
    @function_num(11);
    function suspendJobDefinition(jobName: in string);

  end package;

end;
