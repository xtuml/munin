domain,VerificationGateway,,,,,,,
object,InstrumentationEvent,,,,,,,
object,,,,,,,,
object,VerifiableJob,,,,,,,
object,,,,,,,,
type,timer,private,inst_ref<Timer>,,,,,
type,,,,,,,,
type,duration,private,integer,,,,,
type,,,,,,,,
routine,VerificationGateway,,public,acceptInstrumentationEventForJob,1,,,
parameter,clientJobId,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,clientEventId,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,clientEventType,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,existingVerifiableJob : instance of VerifiableJob;%0A%0Abegin%0A  existingVerifiableJob := find_only VerifiableJob (clientJobId = clientJobId);%0A  if existingVerifiableJob = null then%0A    // This is the first event received for a Job we have not seen before - so create a new%0A    // instance of VerifiableJob and its first InstrumentationEvent. %0A    VerifiableJob.createVerifiableJob(clientJobId%2C clientEventId%2C clientEventType);%0A  else%0A    //We have an existing Job and this event should be the next in sequence for that Job%0A    generate VerifiableJob.nextEventForExistingJob (clientEventId%2C clientEventType) to existingVerifiableJob;%0A  end if;%0Aend service;,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
regularrel,R1,,,,,,,
participation,VerificationGateway,VerifiableJob,has_behaviour_verified_using,unconditionally,many,VerificationGateway,InstrumentationEvent,
participation,VerificationGateway,InstrumentationEvent,is_used_to_verify_the_behaviour_of,unconditionally,one,VerificationGateway,VerifiableJob,
participation,,,,,,,,
regularrel,,,,,,,,
regularrel,R2,,,,,,,
participation,VerificationGateway,InstrumentationEvent,was_last_event_received_for,unconditionally,one,VerificationGateway,VerifiableJob,
participation,VerificationGateway,VerifiableJob,last_received,unconditionally,one,VerificationGateway,InstrumentationEvent,
participation,,,,,,,,
description,For a given VerifiableJob this association indicates which of its InstrumentationEvent's (see R1) was the last one received. ,,,,,,,
regularrel,,,,,,,,
regularrel,R3,,,,,,,
participation,VerificationGateway,InstrumentationEvent,is_followed_by,conditionally,one,VerificationGateway,InstrumentationEvent,
participation,VerificationGateway,InstrumentationEvent,is_preceeded_by,conditionally,one,VerificationGateway,InstrumentationEvent,
participation,,,,,,,,
regularrel,,,,,,,,
object,InstrumentationEvent,IV,2,,,,,
attribute,clientEventId,,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,clientEventType,,,clientEventId,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,jobKey,,,clientEventType,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R1,,is_used_to_verify_the_behaviour_of,VerifiableJob,jobKey,,,
referential,,,,,,,,
attribute,,,,,,,,
attribute,eventKey,preferred,unique,jobKey,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
attribute,,,,,,,,
attribute,assignedPreviousEventKey,,,eventKey,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R3,,is_preceeded_by,InstrumentationEvent,eventKey,,,
referential,,,,,,,,
attribute,,,,,,,,
object,,,,,,,,
object,VerifiableJob,VJ,1,,,,,
attribute,clientJobId,,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
description,The ID of the client Job who behaviour is being verified.,,,,,,,
attribute,,,,,,,,
attribute,jobKey,preferred,unique,clientJobId,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
description,The unique identifier assigned to the VerifiableJob for use within this domain. The ID of the 'client' Job is not to be used for this purpose%2C in order that the client's identifier is not leaked beyond where necessary.,,,,,,,
attribute,,,,,,,,
attribute,lastReceivedEventKey,,,jobKey,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
referential,R2,,last_received,InstrumentationEvent,eventKey,,,
referential,,,,,,,,
attribute,,,,,,,,
operation,VerificationGateway,VerifiableJob,public,createVerifiableJob,instance,,1,
parameter,clientJobId,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,clientEventId,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,clientEventType,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,newVerifiableJob : instance of VerifiableJob;%0AfirstInstrumentationEventForJob : instance of InstrumentationEvent;%0A%0Abegin%0A  newVerifiableJob := create unique VerifiableJob (clientJobId => clientJobId);%0A  firstInstrumentationEventForJob := create unique InstrumentationEvent (clientEventId => clientEventId%2C %0A  	                                                                     clientEventType => clientEventType);%0A  link newVerifiableJob R1 firstInstrumentationEventForJob;%0A  link newVerifiableJob R2 firstInstrumentationEventForJob;%0A  %0Aend service;,,,,,,,
codeblock,,,,,,,,
operation,,,,,,,,
state,,VerifiableJob,ProcessingEventsForJob,,1,,,
parameter,nextEventId,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,nextEventType,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,newInstrumentationEvent : instance of InstrumentationEvent;%0ApreviousInstrumentationEvent : instance of InstrumentationEvent;%0A%0Abegin%0A  // Create a new instance of InstrumentationEvent and link it up to the Job via R1 and R2%0A  newInstrumentationEvent := create unique InstrumentationEvent (clientEventId => nextEventId%2C clientEventType => nextEventType);%0A  link this R1 newInstrumentationEvent;%0A  previousInstrumentationEvent = find_one InstrumentationEvent (eventKey = this.lastReceivedEventKey);%0A  if previousInstrumentationEvent /= null then%0A    // The previous InstrumentationEvent for the job has been found - so stitch the newInstrumentationEvent to the %0A    // previousInstrumentationEvent by assigning its assignedPreviousEventId to the clientEventId of the %0A    // previousInstrumentationEvent and then re-link R2 and link R3 in readiness for the next event.%0A    newInstrumentationEvent.assignedPreviousEventKey := previousInstrumentationEvent.eventKey;%0A    unlink this R2 previousInstrumentationEvent;%0A    link this R2 newInstrumentationEvent;%0A    link previousInstrumentationEvent R3.is_followed_by newInstrumentationEvent; %0A  else%0A    // TODO%0A  end if;%0Aend state;,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
state,,VerifiableJob,Deleting,,2,,,
codeblock,begin%0A  null;%0Aend state;,,,,,,,
codeblock,,,,,,,,
state,,,,,,,,
event,nextEventForExistingJob,,1,,,,,
parameter,nextEventId,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,nextEventType,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
event,,,,,,,,
event,deleteVerifiableJob,,2,,,,,
event,,,,,,,,
transitiontable,,,,,,,,
transition,Non_Existent,,,nextEventForExistingJob,Cannot_Happen,,,
transition,,,,,,,,
transition,Non_Existent,,,deleteVerifiableJob,Cannot_Happen,,,
transition,,,,,,,,
transition,ProcessingEventsForJob,,,nextEventForExistingJob,ProcessingEventsForJob,,,
transition,,,,,,,,
transition,ProcessingEventsForJob,,,deleteVerifiableJob,Deleting,,,
transition,,,,,,,,
transition,Deleting,,,nextEventForExistingJob,Cannot_Happen,,,
transition,,,,,,,,
transition,Deleting,,,deleteVerifiableJob,Cannot_Happen,,,
transition,,,,,,,,
transitiontable,,,,,,,,
object,,,,,,,,
domain,,,,,,,,
