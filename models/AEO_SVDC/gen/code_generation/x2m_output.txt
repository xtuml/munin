project,AEO_SVDC,AEO_SVDC,,,,,,
domain,JSONValidation,,,,,,,
domain,,,,,,,,
domain,JSON,,,,,,,
domain,,,,,,,,
domain,AESequenceDC,,,,,,,
terminator,JobAdmin,,,,,,,
routine,AESequenceDC,,public,deleteJob,1,,,
parameter,jobID,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,begin%0A  AEOrdering::deleteJob(jobID);%0Aend service;,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
terminator,,,,,,,,
domain,,,,,,,,
domain,AEOrdering,,,,,,,
terminator,Req_IF_Audited,,,,,,,
terminator,,,,,,,,
terminator,Req_IF_Verification,,,,,,,
routine,AEOrdering,,public,audit_event,1,,,
parameter,jobId,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,nodeName,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,application,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,auditEventType,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,auditEventId,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,auditEventTime,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,prevAuditEventIds,in,,,,,,
typeref,sequence of string,,,,,,,
typeref,,,,,,,,
parameter,reportableAuditEventDataItems,in,,,,,,
typeref,sequence of ReportableAuditEventDataType,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,auditEventData: sequence of AESequenceDC::auditEventDataStructure;%0Abegin%0A  for dataItem in reportableAuditEventDataItems loop%0A    declare%0A      auditEventDataItem: AESequenceDC::auditEventDataStructure;%0A    begin%0A      case dataItem.dataKind is%0A        when AEOrdering::INTRAJOBINV => auditEventDataItem.aedKind := AESequenceDC::INTRAJOBINV;%0A        when AEOrdering::EXTRAJOBINV => auditEventDataItem.aedKind := AESequenceDC::EXTRAJOBINV;%0A        when AEOrdering::BRANCHCONSTRAINT => auditEventDataItem.aedKind := AESequenceDC::BRANCHCONSTRAINT;%0A        when AEOrdering::LOOPCONSTRAINT => auditEventDataItem.aedKind := AESequenceDC::LOOPCONSTRAINT;%0A      end case;%0A      auditEventDataItem.aedName := dataItem.dataName;%0A      auditEventDataItem.aedValue := dataItem.dataValue;%0A      auditEventData := auditEventData & auditEventDataItem;%0A    end;%0A  end loop;%0A  AESequenceDC::acceptOrderedEvent(%0A    auditEventTime%2C%0A    application%2C%0A    auditEventType%2C%0A    jobId%2C%0A    prevAuditEventIds%2C%0A    auditEventId%2C%0A    auditEventData%0A    // nodeName ??%0A  );%0Aend service;,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
routine,AEOrdering,,public,failedJob,2,,,
parameter,jobId,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,failureReason,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,begin%0A  AESequenceDC::failedJob(jobId%2C failureReason);%0Aend service;,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
routine,AEOrdering,,public,jobComplete,3,,,
parameter,jobId,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,begin%0A  AESequenceDC::jobComplete(jobId);%0Aend service;,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
routine,AEOrdering,,public,eventDefinition,4,,,
parameter,jobName,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,sequenceName,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,eventType,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,occurrenceId,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,previousEventTypes,in,,,,,,
typeref,sequence of PreviousEventType,,,,,,,
typeref,,,,,,,,
parameter,isSequenceStart,in,,,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
parameter,isSequenceEnd,in,,,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
parameter,isBreak,in,,,,,,
typeref,boolean,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,prevEventTypes: sequence of AESequenceDC::eventStructure;%0Abegin%0A  // convert the AEOrdering type to an AESequenceDC type%0A  for previousEventType in previousEventTypes loop%0A    declare%0A      prevEventType: AESequenceDC::eventStructure;%0A    begin%0A      prevEventType.eventTypeName := previousEventType.previousEventTypeName;%0A      prevEventType.occurrenceId := previousEventType.occurrenceId;%0A      prevEventType.constraintDefId := previousEventType.constraintDefinitionId;%0A      prevEventType.constraintValue := previousEventType.constraintValue;%0A      prevEventTypes := prevEventTypes & prevEventType;%0A    end;%0A  end;%0A  // call the public service%0A  AESequenceDC::eventDefinition(%0A    jobName%2C%0A    sequenceName%2C%0A    eventType%2C%0A    occurrenceId%2C%0A    prevEventTypes%2C%0A    isSequenceStart%2C%0A    isSequenceEnd%2C%0A    isBreak%0A  );%0Aend service;,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
routine,AEOrdering,,public,jobTypeDeleted,5,,,
parameter,jobTypeName,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
codeblock,begin%0A  AESequenceDC::deprecateJobDefinition(jobTypeName);%0Aend service;,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
routine,AEOrdering,,public,intraJobInvariantDefinition,6,,,
parameter,auditEventDataName,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,jobDefinitionName,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,associatedEvents,in,,,,,,
typeref,sequence of IntraJobInvDataType,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,assocEvents: sequence of AESequenceDC::intraJobInvDataStructure;%0Abegin%0A  for evt in associatedEvents loop%0A    assocEvents := assocEvents & (evt.auditEventType%2C evt.occurrenceId%2C evt.alternativeDataItemName);%0A  end loop;%0A  AESequenceDC::intraJobInvariantDefinition(jobDefinitionName%2C auditEventDataName%2C assocEvents);%0Aend service;,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
routine,AEOrdering,,public,extraJobInvariantDefinition,7,,,
parameter,auditEventDataName,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,sourceJobDefnName,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,sourceEventType,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,sourceOccurrenceId,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,userEvents,in,,,,,,
typeref,sequence of UserEventDataType,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,userEventData: sequence of AESequenceDC::userEventDataStructure;%0Abegin%0A  for evt in userEvents loop%0A    userEventData := userEventData & (evt.jobDefinitionName%2C evt.auditEventType%2C evt.occurrenceId%2C evt.alternativeDataItemName);%0A  end loop;%0A  AESequenceDC::extraJobInvariantDefinition(auditEventDataName%2C sourceJobDefnName%2C sourceEventType%2C sourceOccurrenceId%2C userEventData);%0Aend service;,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
routine,AEOrdering,,public,dynamicControlDefinition,8,,,
parameter,jobTypeName,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,dynamicControlName,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,dynamicControlType,in,,,,,,
typeref,AEOrdering::DynamicControlTypeEnum,,,,,,,
typeref,,,,,,,,
parameter,sourceEventType,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,sourceOccurrenceId,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,userEventType,in,,,,,,
typeref,string,,,,,,,
typeref,,,,,,,,
parameter,userOccurrenceId,in,,,,,,
typeref,integer,,,,,,,
typeref,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
parameter,,,,,,,,
codeblock,sVDCDynamicControlType : AESequenceDC::dynamicControlTypeEnum;%0A%0Abegin%0A  if dynamicControlType = AEOrdering::DynamicControlTypeEnum.BRANCHCOUNT then%0A  	sVDCDynamicControlType := AESequenceDC::dynamicControlTypeEnum.BRANCHCOUNT;%0A  elsif dynamicControlType = AEOrdering::DynamicControlTypeEnum.LOOPCOUNT then%0A  	sVDCDynamicControlType := AESequenceDC::dynamicControlTypeEnum.LOOPCOUNT;%0A  end if;%0A  %0A  AESequenceDC::dynamicControlDefinition(jobTypeName%2C dynamicControlName%2C sVDCDynamicControlType%2C sourceEventType%2C sourceOccurrenceId%2C userEventType%2C userOccurrenceId);%0A  %0Aend service;,,,,,,,
codeblock,,,,,,,,
routine,,,,,,,,
terminator,,,,,,,,
domain,,,,,,,,
project,,,,,,,,
