private service JobManagement::init () is
configFilePath : string;
configFile : string;
logMessage : string;
jobManagementSpec : instance of JobManagementSpec;
jobManager : instance of JobManager;

begin

	// get the supplied command line option for the config file and verify it is valid
	configFilePath := CommandLine::get_option_value("-configPath", "config/");
	configFile := CommandLine::get_option_value("-configFile", "config.json");
	if Filesystem::file_exists(Filesystem::filename(configFilePath & configFile)) then 
		jobManagementSpec := find_one JobManagementSpec();
		if jobManagementSpec = null then
			jobManagementSpec := create unique JobManagementSpec(configFilePath => configFilePath, configFile => configFile, specUpdateRate => @PT2M@, maxJobsPerWorker => 10, 
				                                   maxUnassignedJobs => 100, retiredWorkerDeletionTime => @PT10M@, Current_State => Created);
		end if;
		jobManagementSpec.loadConfigFile();
    	generate JobManagementSpec.checkConfigUpdate() to jobManagementSpec;
	else
		logMessage := "JobManagement::init : failed to locate config file. Specified file = " & configFilePath & configFile;
		Logger::log(Logger::Error, "JobManagement", logMessage);
		raise program_error;
	end if;
	jobManager := find_one JobManager();
	if jobManager = null then
		jobManager := create unique JobManager();
	end if;
	
exception
	when others =>
	
		logMessage := "JobManagement::init : failed during start up";
		Logger::log(Logger::Error, "JobManagement", logMessage);
		raise program_error;
	
end service;
