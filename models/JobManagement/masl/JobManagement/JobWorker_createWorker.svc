public service JobManagement::JobWorker.createWorker ( workerId: in UUID::formatted_uuid ) is
worker : instance of JobWorker;
jobManager : instance of JobManager;
lastEmployedWorker : instance of JobWorker;

begin
	
	jobManager := find_one JobManager();
	worker := create JobWorker(workerId => workerId, employmentDate => timestamp'now);
	link worker R1 jobManager;
	// check if this is the first employee
	if jobManager -> R22.JobWorker = null then
		link jobManager R22 worker;
	end if;
	// update last employee
	lastEmployedWorker := jobManager -> R21.JobWorker;
	if lastEmployedWorker /= null then
		unlink jobManager R21 lastEmployedWorker;
		link worker R3.employedAfter lastEmployedWorker; 
	end if;
	link worker R21 jobManager;
	// if the next worker is not assigned
	if jobManager -> R4.JobWorker = null then
		// assign the next worker
		link jobManager R4 worker;
	end if;
	worker.employWorker();
	
end service;
