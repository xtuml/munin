private service JobManagement::checkJobEventAssignment ( jobName: in string,
                                                         jobId: in string,
                                                         reportedAuditEventString: in string,
                                                         workerId: in UUID::formatted_uuid ) is
assignedJob : instance of AssignedJob;
auditEvent : instance of AuditEvent;
workerReportedEvent : instance of _TEST_Worker_reportEvent;
employedWorker : instance of EmployedWorker;
assignedWorker : instance of EmployedWorker;

begin
	assignedJob := find_one AssignedJob(jobId = jobId);
	auditEvent := find_one AuditEvent(auditEvent = reportedAuditEventString);
	Assertions::assertTrue((assignedJob /= null), "Test Assign Work: Failed to find assigned job for job " & jobName);
	Assertions::assertTrue((auditEvent = (find_one (assignedJob -> R5.Job -> R7.AuditEvent)(auditEvent = reportedAuditEventString))), "Test Assign Work: Failed to find audit event for job " & jobName);
	employedWorker := find_one EmployedWorker(workerId = workerId);
	assignedWorker := assignedJob -> R6.EmployedWorker;
	Assertions::assertTrue((assignedWorker = employedWorker), "Test Assign Work: Failed to assign job to correct worker " & jobName);
	workerReportedEvent := find_one _TEST_Worker_reportEvent(workerId = workerId and auditEvent = reportedAuditEventString);
	delete workerReportedEvent;
end service;
