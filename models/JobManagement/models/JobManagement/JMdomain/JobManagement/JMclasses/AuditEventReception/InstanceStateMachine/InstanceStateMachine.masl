//! ACTIVITY BEGIN. 'b64e4fb8-83d6-417d-bade-c72200a621ea' '6e3f5d40-8281-4037-b473-ad3fb6e8e8b1' DO NOT EDIT THIS LINE.
state JobManagement::AuditEventReception.Receiving () is
rawAuditEvents : string := "";
pollSuccess : boolean;
delayValue : duration;
kvps : dictionary of string;
begin
    // Obtain and process an audit event from the system under observation.
    // If we receive an event, then get another immediately, otherwise delay.
    delayValue := @PT1S@;
    pollSuccess := Reception~>obtainEvent(rawAuditEvents);
    if (pollSuccess) then
        AuditEvent.acceptAuditEvents(rawAuditEvents);
        delayValue := @PT0S@;
    end if;

    // See if the protocol verifier is getting too busy to receive more audit events.
    if ((find UnassignedJob())'length > (find_one JobManagementSpec()).maxUnassignedJobs) then
        generate AuditEventReception.tooBusy() to this;
    else
        schedule this.pollTimer generate AuditEventReception.nextReception() to this delay delayValue;
    end if;
end state;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

//! ACTIVITY BEGIN. 'b64e4fb8-83d6-417d-bade-c72200a621ea' '8e2cf2bc-bcf4-4269-b0a8-0db95a0b2bfe' DO NOT EDIT THIS LINE.
state JobManagement::AuditEventReception.Throttling () is
unassignedJobCount : integer;
kvps : dictionary of string;
begin
    // See if the protocol verifier has completed enough work to receive more audit events.
    unassignedJobCount := (find UnassignedJob())'length;
    if (unassignedJobCount < (find_one JobManagementSpec()).maxUnassignedJobs) then
        generate AuditEventReception.readyToReceive() to this;
    else
        schedule this.pollTimer generate AuditEventReception.nextReception() to this delay @PT1S@;
        if (Logger::enabled(Logger::Debug, "pv.jm.auditeventreception.throttling")) then
            kvps["unassignedJobCount"] := unassignedJobCount'image;
            Logger::log(Logger::Debug, "pv.jm.auditeventreception.throttling",
                jmLog("jobmanagement_reception_throttling", "throttling audit event reception", kvps));
        end if;
    end if;
end state;
//! ACTIVITY END. DO NOT EDIT THIS LINE.

